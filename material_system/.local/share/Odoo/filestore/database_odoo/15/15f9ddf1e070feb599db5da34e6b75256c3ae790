
/* /web/static/tests/helpers/test_utils_file.js defined in bundle 'web.assets_tests' */
odoo.define('web.test_utils_file',function(){"use strict";function _createFakeDataTransfer(files){return{dropEffect:'all',effectAllowed:'all',files,getData:function(){return files;},items:[],types:['Files'],};}
function createFile(data){return new Promise(function(resolve,reject){var requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem;if(!requestFileSystem){throw new Error('FileSystem API is not supported');}
requestFileSystem(window.TEMPORARY,1024*1024,function(fileSystem){fileSystem.root.getFile(data.name,{create:true},function(fileEntry){fileEntry.createWriter(function(fileWriter){fileWriter.onwriteend=function(e){fileSystem.root.getFile(data.name,{},function(fileEntry){fileEntry.file(function(file){resolve(file);});});};fileWriter.write(new Blob([data.content],{type:data.contentType}));});});});});}
function dragoverFile($el,file){var ev=new Event('dragover',{bubbles:true});Object.defineProperty(ev,'dataTransfer',{value:_createFakeDataTransfer(file),});$el[0].dispatchEvent(ev);}
function dropFile($el,file){var ev=new Event('drop',{bubbles:true,});Object.defineProperty(ev,'dataTransfer',{value:_createFakeDataTransfer([file]),});$el[0].dispatchEvent(ev);}
function dropFiles($el,files){var ev=new Event('drop',{bubbles:true,});Object.defineProperty(ev,'dataTransfer',{value:_createFakeDataTransfer(files),});$el[0].dispatchEvent(ev);}
function inputFiles(el,files){const dataTransfer=new window.DataTransfer();for(const file of files){dataTransfer.items.add(file);}
el.files=dataTransfer.files;const versionRaw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);const chromeVersion=versionRaw?parseInt(versionRaw[2],10):false;if(!chromeVersion||chromeVersion>=73){el.dispatchEvent(new Event('change'));}}
return{createFile:createFile,dragoverFile:dragoverFile,dropFile:dropFile,dropFiles,inputFiles,};});;

/* /auth_totp/static/tests/totp_flow.js defined in bundle 'web.assets_tests' */
odoo.define('auth_totp.tours',function(require){"use strict";const tour=require('web_tour.tour');const ajax=require('web.ajax');function openRoot(){return[{content:"return to client root to avoid race condition",trigger:'body',run(){$('body').addClass('wait');window.location='/web';}},{content:"wait for client reload",trigger:'body:not(.wait)',run(){}}];}
function openUserProfileAtSecurityTab(){return[{content:'Open user account menu',trigger:'.o_user_menu .oe_topbar_name',run:'click',},{content:"Open preferences / profile screen",trigger:'[data-menu=settings]',run:'click',},{content:"Switch to security tab",trigger:'a[role=tab]:contains("Account Security")',run:'click',}];}
tour.register('totp_tour_setup',{test:true,url:'/web'},[...openUserProfileAtSecurityTab(),{content:"Open totp wizard",trigger:'button[name=totp_enable_wizard]',},{content:"Check that we have to enter enhanced security mode",trigger:'div:contains("confirm your password")',run:()=>{},},{content:"Input password",trigger:'[name=password]',run:'text demo',},{content:"Confirm",trigger:"button:contains(Confirm Password)",},{content:"Check the wizard has opened",trigger:'div:contains("Scan the image below")',run:()=>{}},{content:"Get secret from collapsed div",trigger:'a:contains("show the code")',run(helpers){const secret=this.$anchor.closest('div').find('code').text();ajax.jsonRpc('/totphook','call',{secret}).then((token)=>{helpers._text(helpers._get_action_values('input[name=code]'),token);helpers._click(helpers._get_action_values('button.btn-primary:contains(Enable)'));$('body').addClass('got-token')});}},{content:'wait for rpc',trigger:'body.got-token',run(){}},...openRoot(),...openUserProfileAtSecurityTab(),{content:"Check that the button has changed",trigger:'button:contains(Disable two-factor authentication)',run:()=>{}}]);tour.register('totp_login_enabled',{test:true,url:'/'},[{content:"check that we're on the login page or go to it",trigger:'input#login, a:contains(Sign in)'},{content:"input login",trigger:'input#login',run:'text demo',},{content:'input password',trigger:'input#password',run:'text demo',},{content:"click da button",trigger:'button:contains("Log in")',},{content:"expect totp screen",trigger:'label:contains(Authentication Code)',},{content:"input code",trigger:'input[name=totp_token]',run(helpers){ajax.jsonRpc('/totphook','call',{}).then((token)=>{helpers._text(helpers._get_action_values(),token);helpers._click(helpers._get_action_values('button:contains("Verify")'));});}},{content:"check we're logged in",trigger:".o_user_menu .oe_topbar_name",run:()=>{}}]);tour.register('totp_login_device',{test:true,url:'/'},[{content:"check that we're on the login page or go to it",trigger:'input#login, a:contains(Sign in)'},{content:"input login",trigger:'input#login',run:'text demo',},{content:'input password',trigger:'input#password',run:'text demo',},{content:"click da button",trigger:'button:contains("Log in")',},{content:"expect totp screen",trigger:'label:contains(Authentication Code)',},{content:"check remember device box",trigger:'label[for=switch-remember]',},{content:"input code",trigger:'input[name=totp_token]',run(helpers){ajax.jsonRpc('/totphook','call',{}).then((token)=>{helpers._text(helpers._get_action_values(),token);helpers._click(helpers._get_action_values('button:contains("Verify")'));});}},{content:"check we're logged in",trigger:".o_user_menu .oe_topbar_name",run:()=>{}},{content:"click on the user",trigger:'li[class=o_user_menu] > a',},{content:"click the Log out button",trigger:'a[data-menu=logout]',},{content:"check that we're back on the login page or go to it",trigger:'input#login, a:contains(Log in)'},{content:"input login again",trigger:'input#login',run:'text demo',},{content:'input password again',trigger:'input#password',run:'text demo',},{content:"click da button again",trigger:'button:contains("Log in")',},{content:"check we're logged in without 2FA",trigger:".o_user_menu .oe_topbar_name",run:()=>{}},...openUserProfileAtSecurityTab(),{content:"Open totp wizard",trigger:'button[name=totp_disable]',},{content:"Check that we have to enter enhanced security mode",trigger:'div:contains("confirm your password")',run:()=>{},},{content:"Input password",trigger:'[name=password]',run:'text demo',},{content:"Confirm",trigger:"button:contains(Confirm Password)",},...openRoot(),...openUserProfileAtSecurityTab(),{content:"Check that the button has changed",trigger:'button:contains(Enable two-factor authentication)',run:()=>{}}]);tour.register('totp_login_disabled',{test:true,url:'/'},[{content:"check that we're on the login page or go to it",trigger:'input#login, a:contains(Sign in)'},{content:"input login",trigger:'input#login',run:'text demo',},{content:'input password',trigger:'input#password',run:'text demo',},{content:"click da button",trigger:'button:contains("Log in")',},...openUserProfileAtSecurityTab(),]);const columns={};tour.register('totp_admin_disables',{test:true,url:'/web'},[tour.stepUtils.showAppsMenuItem(),{content:'Go to settings',trigger:'[data-menu-xmlid="base.menu_administration"]'},{content:'Wait for page',trigger:'.o_menu_brand:contains("Settings")',run:()=>{}},{content:"Open Users menu",trigger:'[data-menu-xmlid="base.menu_users"]'},{content:"Open Users view",trigger:'[data-menu-xmlid="base.menu_action_res_users"]',run:function(helpers){const $crumb=$('.breadcrumb');if($crumb.text().indexOf('Users')===-1){helpers.click();}else{helpers.click($('[data-menu-xmlid="base.menu_users"]'));}}},{content:"Find Demo User",trigger:'td.o_data_cell:contains("demo")',run:function(helpers){const $titles=this.$anchor.closest('table').find('tr:first th');for(let i=0;i<$titles.length;++i){columns[$titles[i].getAttribute('data-name')]=i;}
const $row=this.$anchor.closest('tr');const sel=$row.find('.o_list_record_selector input[type=checkbox]');const totp=$row[0].children[columns['totp_enabled']].querySelector('input');if(totp.checked){helpers.click(sel);}}},{content:"Open Actions menu",trigger:'button.o_dropdown_toggler_btn:contains("Action")'},{content:"Select totp remover",trigger:'a.dropdown-item:contains(Disable TOTP on users)'},{content:"Check that we have to enter enhanced security mode",trigger:'div:contains("confirm your password")',run:()=>{},},{content:"Input password",trigger:'[name=password]',run:'text admin',},{content:"Confirm",trigger:"button:contains(Confirm Password)",},{content:"check that demo user has been de-totp'd",trigger:"td.o_data_cell:contains(demo)",run:function(){const totpcell=this.$anchor.closest('tr')[0].children[columns['totp_enabled']];if(totpcell.querySelector('input').checked){throw new Error("totp should have been disabled on demo user");}}}])});;

/* /bus/static/tests/bus_tests_tour.js defined in bundle 'web.assets_tests' */
odoo.define("bus.tour",function(require){"use strict";const tour=require("web_tour.tour");tour.register("bundle_changed_notification",{test:true,url:'/web',},[{trigger:'.o_web_client',run(){const webClient=odoo.__DEBUG__.services['web.web_client'];const _delayFn=webClient._getBundleNotificationDelay;webClient._getBundleNotificationDelay=()=>0;this.call('bus_service','trigger','notification',[[['db_name','bundle_changed'],['web.assets_backend','hash']]]);webClient._getBundleNotificationDelay=_delayFn;}},{trigger:'.o_notification_title:contains(Refresh)',}]);});;

/* /mail/static/tests/tours/mail_full_composer_test_tour.js defined in bundle 'web.assets_tests' */
odoo.define('mail/static/tests/tours/mail_full_composer_test_tour.js',function(require){"use strict";const{createFile,inputFiles,}=require('web.test_utils_file');const tour=require('web_tour.tour');tour.register('mail/static/tests/tours/mail_full_composer_test_tour.js',{test:true,},[{content:"Click on Send Message",trigger:'.o_ChatterTopbar_buttonSendMessage',},{content:"Write something in composer",trigger:'.o_ComposerTextInput_textarea',run:'text blahblah',},{content:"Add one file in composer",trigger:'.o_Composer_buttonAttachment',async run(){const file=await createFile({content:'hello, world',contentType:'text/plain',name:'text.txt',});inputFiles(document.querySelector('.o_FileUploader_input'),[file]);},},{content:"Open full composer",trigger:'.o_Composer_buttonFullComposer',extra_trigger:'.o_Attachment:not(.o-temporary)'},{content:"Check the earlier provided attachment is listed",trigger:'.o_attachment[title="text.txt"]',run(){},},{content:"Check subject is autofilled",trigger:'input[name="subject"]',run(){const subjectValue=document.querySelector('input[name="subject"]').value;if(subjectValue!=="Re: Test User"){console.error(`Full composer should have "Re: Test User" in subject input (actual: ${subjectValue})`);}},},{content:"Check composer content is kept",trigger:'.oe_form_field[name="body"]',run(){const bodyContent=document.querySelector('.oe_form_field[name="body"] textarea').textContent;if(!bodyContent.includes("blahblah")){console.error(`Full composer should contain text from small composer ("blahblah") in body input (actual: ${bodyContent})`);}},},{content:"Open templates",trigger:'.o_field_widget[name="template_id"] input',},{content:"Check a template is listed",in_modal:false,trigger:'.ui-autocomplete .ui-menu-item a:contains("Test template")',run(){},},{content:"Send message",trigger:'.o_mail_send',},{content:"Check message is shown",trigger:'.o_Message:contains("blahblah")',},{content:"Check message contains the attachment",trigger:'.o_Message .o_Attachment_filename:contains("text.txt")',}]);});;

/* /portal/static/tests/tours/portal.js defined in bundle 'web.assets_tests' */
odoo.define('portal.tour',function(require){'use strict';var tour=require("web_tour.tour");tour.register('portal_load_homepage',{test:true,url:'/my',},[{content:"Check portal is loaded",trigger:'a[href*="/my/account"]:contains("Edit"):first',},{content:"Load my account details",trigger:'input[value="Joel Willis"]'}]);});;

/* /auth_totp_portal/static/tests/totp_portal.js defined in bundle 'web.assets_tests' */
odoo.define('auth_totp_portal.tours',function(require){"use strict";const tour=require('web_tour.tour');const ajax=require('web.ajax');tour.register('totportal_tour_setup',{test:true,url:'/my/security'},[{content:"Open totp wizard",trigger:'button#auth_totp_portal_enable',},{content:"Check that we have to enter enhanced security mode",trigger:'div:contains("confirm your password")',run:()=>{},},{content:"Input password",trigger:'[name=password]',run:'text portal',},{content:"Confirm",trigger:"button:contains(Confirm Password)",},{content:"Check the wizard has opened",trigger:'div:contains("Scan the image below")',run:()=>{}},{content:"Get secret from collapsed div",trigger:'a:contains("show the code")',run:async function(helpers){const secret=this.$anchor.closest('div').find('code').text();const token=await ajax.jsonRpc('/totphook','call',{secret});helpers._text(helpers._get_action_values('input[name=code]'),token);helpers._click(helpers._get_action_values('button.btn-primary:contains(Enable)'));}},{content:"Check that the button has changed",trigger:'button:contains(Disable two-factor authentication)',run:()=>{}}]);tour.register('totportal_login_enabled',{test:true,url:'/'},[{content:"check that we're on the login page or go to it",trigger:'input#login, a:contains(Sign in)'},{content:"input login",trigger:'input#login',run:'text portal',},{content:'input password',trigger:'input#password',run:'text portal',},{content:"click da button",trigger:'button:contains("Log in")',},{content:"expect totp screen",trigger:'label:contains(Authentication Code)',},{content:"input code",trigger:'input[name=totp_token]',run:async function(helpers){const token=await ajax.jsonRpc('/totphook','call',{});helpers._text(helpers._get_action_values(),token);helpers._click(helpers._get_action_values('button:contains("Verify")'));}},{content:"check we're logged in",trigger:"h3:contains(Documents)",run:()=>{}},{content:"go back to security",trigger:"a:contains(Security)",},{content:"Open totp wizard",trigger:'button#auth_totp_portal_disable',},{content:"Check that we have to enter enhanced security mode",trigger:'div:contains("confirm your password")',run:()=>{},},{content:"Input password",trigger:'[name=password]',run:'text portal',},{content:"Confirm",trigger:"button:contains(Confirm Password)",},{content:"Check that the button has changed",trigger:'button:contains(Enable two-factor authentication)',run:()=>{}}]);tour.register('totportal_login_disabled',{test:true,url:'/'},[{content:"check that we're on the login page or go to it",trigger:'input#login, a:contains(Sign in)'},{content:"input login",trigger:'input#login',run:'text portal',},{content:'input password',trigger:'input#password',run:'text portal',},{content:"click da button",trigger:'button:contains("Log in")',},{content:"check we're logged in",trigger:"h3:contains(Documents)",run:()=>{}}]);});;

/* /account/static/tests/tours/account_dashboard_setup_bar_tests.js defined in bundle 'web.assets_tests' */
odoo.define('account.dashboard.setup.tour',function(require){"use strict";var core=require('web.core');var tour=require('web_tour.tour');var _t=core._t;tour.register('account_render_report',{test:true,url:'/web',},[tour.stepUtils.showAppsMenuItem(),{id:'account_menu_click',trigger:'.o_app[data-menu-xmlid="account.menu_finance"]',position:'bottom',},{trigger:'.o_data_row:first',extra_trigger:'.breadcrumb',},{trigger:'.o_control_panel button:contains("'+_t('Print')+'")',},{trigger:'.o_control_panel .o_dropdown_menu a:contains("'+_t('Invoices without Payment')+'")',},{trigger:'iframe .o_report_layout_standard h2',content:'Primary color is correct',run:function(){if(this.$anchor.css('color')!=="rgb(18, 52, 86)"){console.error('The primary color should be the one set on the company.');}},},{trigger:'iframe .o_report_layout_standard #informations div strong',content:'Secondary color is correct',run:function(){if(this.$anchor.css('color')!=="rgb(120, 145, 1)"){console.error('The secondary color should be the one set on the company.');}},}]);});;

/* /account/static/tests/tours/tax_group_tests.js defined in bundle 'web.assets_tests' */
odoo.define('account.tax.group.tour.tests',function(require){"use strict";var core=require('web.core');var tour=require('web_tour.tour');var _t=core._t;tour.register('account_tax_group',{test:true,url:"/web",},[tour.stepUtils.showAppsMenuItem(),{content:"Go to Invoicing",trigger:'.o_app[data-menu-xmlid="account.menu_finance"]',edition:'community',},{content:"Go to Accounting",trigger:'.o_app[data-menu-xmlid="account_accountant.menu_accounting"]',edition:'enterprise',},{content:"Go to Vendors",trigger:'a:contains("Vendors")',},{content:"Go to Bills",trigger:'span:contains("Bills")',},{extra_trigger:'.breadcrumb:contains("Bills")',content:"Create new bill",trigger:'.o_list_button_add',},{content:"Add vendor",trigger:'div.o_field_widget.o_field_many2one[name="partner_id"] div input',run:'text Azure Interior',},{content:"Valid vendor",trigger:'.ui-menu-item a:contains("Azure Interior")',},{content:"Add items",trigger:'div[name="invoice_line_ids"] .o_field_x2many_list_row_add a:contains("Add a line")',},{content:"Select input",trigger:'div[name="invoice_line_ids"] .o_list_view .o_selected_row .o_list_many2one:first input',},{content:"Type item",trigger:'div[name="invoice_line_ids"] .o_list_view .o_selected_row .o_list_many2one:first input',run:"text Large Desk",},{content:"Valid item",trigger:'.ui-menu-item-wrapper:contains("Large Desk")',},{content:"Save the account move",trigger:'.o_form_button_save',},{content:"Edit the account move",trigger:'.o_form_button_edit',},{content:"Edit tax group amount",trigger:'.oe_tax_group_amount_value',},{content:"Modify the input value",trigger:'.tax_group_edit_input input',run:function(actions){$('.tax_group_edit_input input').val(200);$('.tax_group_edit_input input').select();var keydownEvent=jQuery.Event('keydown');keydownEvent.which=13;this.$anchor.trigger(keydownEvent);},},{content:"Valid total amount",trigger:'span[name="amount_total"]:contains("1,499.00")',},{content:"Select item quantity",trigger:'div[name="invoice_line_ids"] .o_list_view tbody tr.o_data_row .o_list_number[title="1.000"]',},{content:"Change item quantity",trigger:'div[name="invoice_line_ids"] .o_list_view tbody tr.o_data_row .o_list_number[title="1.000"] input',run:'text 2',},{content:"Valid the new value",trigger:'div[name="invoice_line_ids"] .o_list_view tbody tr.o_data_row .o_list_number[title="1.000"] input',run:function(actions){var keydownEvent=jQuery.Event('keydown');keydownEvent.which=13;this.$anchor.trigger(keydownEvent);},},{content:"Save the account move",trigger:'.o_form_button_save',},{content:"Check new value of tax group",trigger:'.oe_tax_group_amount_value:contains("389.70")',},]);});;

/* /point_of_sale/static/tests/tours/helpers/utils.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.utils',function(require){'use strict';const config=require('web.config');let steps=[];function startSteps(){steps=[{content:'wait for loading to finish',trigger:'body:not(:has(.loader))',run:function(){},},];}
function getSteps(){return steps;}
const methodProxyHandler={apply(target,thisArg,args){const res=target.call(thisArg,...args);if(config.isDebug()){const constructor=thisArg.constructor.name.split(' ')[1];const methodName=target.name.split(' ')[1];const argList=args.map((a)=>(typeof a==='string'?`'${a}'`:`${a}`)).join(', ');steps.push({content:`DOING "${constructor}.${methodName}(${argList})"`,trigger:'.pos',run:()=>{},});}
steps.push(...res);return res;},};const proxyHandler={get(target,key){const method=target[key];if(!method){throw new Error(`Tour method '${key}' is not available.`);}
return new Proxy(method.bind(target),methodProxyHandler);},};function createTourMethods(name,Do,Check=class{},Execute=class{}){Object.defineProperty(Do,'name',{value:`${name}.do`});Object.defineProperty(Check,'name',{value:`${name}.check`});Object.defineProperty(Execute,'name',{value:`${name}.exec`,});const methods={do:new Do(),check:new Check(),exec:new Execute()};methods.exec._do=methods.do;methods.exec._check=methods.check;return{Do,Check,Execute,[name]:{do:new Proxy(methods.do,proxyHandler),check:new Proxy(methods.check,proxyHandler),exec:new Proxy(methods.exec,proxyHandler),_do:methods.do,_check:methods.check,_exec:methods.exec,},};}
return{startSteps,getSteps,createTourMethods};});;

/* /point_of_sale/static/tests/tours/helpers/ProductScreenTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ProductScreenTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickDisplayedProduct(name){return[{content:`click product '${name}'`,trigger:`.product-list .product-name:contains("${name}")`,},];}
clickOrderline(name,quantity){return[{content:`selecting orderline with product '${name}' and quantity '${quantity}'`,trigger:`.order .orderline:not(:has(.selected)) .product-name:contains("${name}") ~ .info-list em:contains("${quantity}")`,},{content:`orderline with product '${name}' and quantity '${quantity}' has been selected`,trigger:`.order .orderline.selected .product-name:contains("${name}") ~ .info-list em:contains("${quantity}")`,run:()=>{},},];}
clickSubcategory(name){return[{content:`selecting '${name}' subcategory`,trigger:`.products-widget > .products-widget-control .category-simple-button:contains("${name}")`,},{content:`'${name}' subcategory selected`,trigger:`.breadcrumbs .breadcrumb-button:contains("${name}")`,run:()=>{},},];}
clickHomeCategory(){return[{content:`click Home subcategory`,trigger:`.breadcrumbs .breadcrumb-home`,},];}
pressNumpad(keys){const numberChars='. 0 1 2 3 4 5 6 7 8 9'.split(' ');const modeButtons='Qty Price Disc'.split(' ');function generateStep(key){let trigger;if(numberChars.includes(key)){trigger=`.numpad .number-char:contains("${key}")`;}else if(modeButtons.includes(key)){trigger=`.numpad .mode-button:contains("${key}")`;}else if(key==='Backspace'){trigger=`.numpad .numpad-backspace`;}else if(key==='+/-'){trigger=`.numpad .numpad-minus`;}
return{content:`'${key}' pressed in product screen numpad`,trigger,};}
return keys.split(' ').map(generateStep);}
clickPayButton(){return[{content:'click pay button',trigger:'.actionpad .button.pay'},{content:'now in payment screen',trigger:'.pos-content .payment-screen',run:()=>{},},];}
clickCustomerButton(){return[{content:'click customer button',trigger:'.actionpad .button.set-customer'},{content:'customer screen is shown',trigger:'.pos-content .clientlist-screen',run:()=>{},},];}
clickCustomer(name){return[{content:`select customer '${name}'`,trigger:`.clientlist-screen .client-line td:contains("${name}")`,},{content:`client line '${name}' is highlighted`,trigger:`.clientlist-screen .client-line.highlight td:contains("${name}")`,run:()=>{},},];}
clickSetCustomer(){return[{content:'click set customer',trigger:'.clientlist-screen .button.next.highlight',},];}
changeFiscalPosition(name){return[{content:'click fiscal position button',trigger:'.o_fiscal_position_button',},{content:'fiscal position screen is shown',trigger:`.selection-item:contains("${name}")`,},];}
clickPricelistButton(){return[{trigger:'.o_pricelist_button'}];}
selectPriceList(name){return[{content:`select price list '${name}'`,trigger:`.selection-item:contains("${name}")`,},];}
scan_barcode(barcode){return[{content:`input barcode '${barcode}'`,trigger:"input.ean",run:`text ${barcode}`,},{content:`button scan barcode '${barcode}'`,trigger:"li.barcode",run:'click',}];}
scan_ean13_barcode(barcode){return[{content:`input barcode '${barcode}'`,trigger:"input.ean",run:`text ${barcode}`,},{content:`button scan EAN-13 barcode '${barcode}'`,trigger:"li.custom_ean",run:'click',}];}}
class Check{isShown(){return[{content:'product screen is shown',trigger:'.product-screen:not(:has(.oe_hidden))',run:()=>{},},];}
selectedOrderlineHas(name,quantity,price){const res=[{content:'order widget has orderlines',trigger:'.order .orderlines',run:()=>{},},{content:`'${name}' is selected`,trigger:`.order .orderline.selected .product-name:contains("${name}")`,run:function(){},},];if(quantity){res.push({content:`selected line has ${quantity} quantity`,trigger:`.order .orderline.selected .product-name:contains("${name}") ~ .info-list em:contains("${quantity}")`,run:function(){},});}
if(price){res.push({content:`selected line has total price of ${price}`,trigger:`.order .orderline.selected .product-name:contains("${name}") ~ .price:contains("${price}")`,run:function(){},});}
return res;}
orderIsEmpty(){return[{content:`order is empty`,trigger:`.order .order-empty`,run:()=>{},},];}
productIsDisplayed(name){return[{content:`'${name}' should be displayed`,trigger:`.product-list .product-name:contains("${name}")`,run:()=>{},},];}
totalAmountIs(amount){return[{content:`order total amount is '${amount}'`,trigger:`.order-container .order .summary .value:contains("${amount}")`,run:()=>{},}]}
modeIsActive(mode){return[{content:`'${mode}' is active`,trigger:`.numpad button.selected-mode:contains('${mode}')`,run:function(){},},];}
noDiscountApplied(originalPrice){return[{content:'no discount is applied',trigger:`.info:not(:contains(${originalPrice}))`,},];}
discountOriginalPriceIs(original_price){return[{content:`discount original price is shown`,trigger:`s:contains('${original_price}')`,run:function(){},},];}}
class Execute{addOrderline(productName,quantity,unitPrice=undefined,expectedTotal=undefined){const res=this._do.clickDisplayedProduct(productName);if(unitPrice){res.push(...this._do.pressNumpad('Price'));res.push(...this._check.modeIsActive('Price'));res.push(...this._do.pressNumpad(unitPrice.toString().split('').join(' ')));res.push(...this._do.pressNumpad('Qty'));res.push(...this._check.modeIsActive('Qty'));}
for(let char of quantity.toString()){if('.0123456789'.includes(char)){res.push(...this._do.pressNumpad(char));}else if('-'.includes(char)){res.push(...this._do.pressNumpad('+/-'));}}
if(expectedTotal){res.push(...this._check.selectedOrderlineHas(productName,quantity,expectedTotal));}else{res.push(...this._check.selectedOrderlineHas(productName,quantity));}
return res;}
addMultiOrderlines(...list){const steps=[];for(let[product,qty,price]of list){steps.push(...this.addOrderline(product,qty,price));}
return steps;}}
return createTourMethods('ProductScreen',Do,Check,Execute);});;

/* /point_of_sale/static/tests/tours/helpers/TicketScreenTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.TicketScreenTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickNewTicket(){return[{trigger:'.ticket-screen .highlight'}];}
clickDiscard(){return[{trigger:'.ticket-screen button.discard'}];}
selectOrder(orderName){return[{trigger:`.ticket-screen .order-row > .col:nth-child(2):contains("${orderName}")`,},];}
deleteOrder(orderName){return[{trigger:`.ticket-screen .orders > .order-row > .col:contains("${orderName}") ~ .col[name="delete"]`,},];}
selectFilter(name){return[{trigger:`.pos-search-bar .filter`,},{trigger:`.pos-search-bar .filter ul`,run:()=>{},},{trigger:`.pos-search-bar .filter ul li:contains("${name}")`,},];}
search(field,searchWord){return[{trigger:'.pos-search-bar input',run:`text ${searchWord}`,},{trigger:'.pos-search-bar input',run:function(){document.querySelector('.pos-search-bar input').dispatchEvent(new KeyboardEvent('keydown',{key:''}));},},{trigger:`.pos-search-bar .search ul li:contains("${field}")`,},];}
settleTips(){return[{trigger:'.ticket-screen .buttons .settle-tips',},];}}
class Check{checkStatus(orderName,status){return[{trigger:`.ticket-screen .order-row > .col:nth-child(2):contains("${orderName}") ~ .col:nth-child(6):contains(${status})`,run:()=>{},},];}
nthRowContains(n,string){return[{trigger:`.ticket-screen .orders > .order-row:nth-child(${n}):contains("${string}")`,run:()=>{},},];}
noNewTicketButton(){return[{trigger:'.ticket-screen .controls .buttons:nth-child(1):has(.discard)',run:()=>{},},];}}
class Execute{}
return createTourMethods('TicketScreen',Do,Check,Execute);});;

/* /point_of_sale/static/tests/tours/helpers/PaymentScreenTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.PaymentScreenTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickPaymentMethod(name){return[{content:`click '${name}' payment method`,trigger:`.paymentmethods .button.paymentmethod:contains("${name}")`,},];}
clickPaymentlineDelButton(name,amount){return[{content:`delete ${name} paymentline with ${amount} amount`,trigger:`.paymentlines .paymentline .payment-name:contains("${name}") ~ .delete-button`,},];}
clickEmailButton(){return[{content:`click email button`,trigger:`.payment-buttons .js_email`,},];}
clickTipButton(){return[{trigger:`.payment-buttons .js_tip`,},];}
clickInvoiceButton(){return[{content:'click invoice button',trigger:'.payment-buttons .js_invoice'}];}
clickValidate(){return[{content:'validate payment',trigger:`.payment-screen .button.next.highlight`,},];}
pressNumpad(keys){const numberChars='. +/- 0 1 2 3 4 5 6 7 8 9'.split(' ');const modeButtons='+10 +20 +50'.split(' ');function generateStep(key){let trigger;if(numberChars.includes(key)){trigger=`.payment-numpad .number-char:contains("${key}")`;}else if(modeButtons.includes(key)){trigger=`.payment-numpad .mode-button:contains("${key}")`;}else if(key==='Backspace'){trigger=`.payment-numpad .number-char img[alt="Backspace"]`;}
return{content:`'${key}' pressed in payment numpad`,trigger,};}
return keys.split(' ').map(generateStep);}
clickBack(){return[{content:'click back button',trigger:'.payment-screen .button.back',},];}
clickTipButton(){return[{trigger:'.payment-screen .button.js_tip',},]}}
class Check{isShown(){return[{content:'payment screen is shown',trigger:'.pos .payment-screen',run:()=>{},},];}
changeIs(amount){return[{content:`change is ${amount}`,trigger:`.payment-status-change .amount:contains("${amount}")`,run:()=>{},},];}
remainingIs(amount){return[{content:`remaining amount is ${amount}`,trigger:`.payment-status-remaining .amount:contains("${amount}")`,run:()=>{},},];}
validateButtonIsHighlighted(isHighlighted=true){return[{content:`validate button is ${
                        isHighlighted ? 'highlighted' : 'not highligted'
                    }`,trigger:isHighlighted?`.payment-screen .button.next.highlight`:`.payment-screen .button.next:not(:has(.highlight))`,run:()=>{},},];}
emptyPaymentlines(amountToPay){return[{content:`there are no paymentlines`,trigger:`.paymentlines-empty`,run:()=>{},},{content:`amount to pay is '${amountToPay}'`,trigger:`.paymentlines-empty .total:contains("${amountToPay}")`,run:()=>{},},];}
selectedPaymentlineHas(paymentMethodName,amount){return[{content:`line paid via '${paymentMethodName}' is selected`,trigger:`.paymentlines .paymentline.selected .payment-name:contains("${paymentMethodName}")`,run:()=>{},},{content:`amount tendered in the line is '${amount}'`,trigger:`.paymentlines .paymentline.selected .payment-amount:contains("${amount}")`,run:()=>{},},];}}
class Execute{pay(method,amount){const steps=[];steps.push(...this._do.clickPaymentMethod(method));for(let char of amount.split('')){steps.push(...this._do.pressNumpad(char));}
steps.push(...this._check.validateButtonIsHighlighted());steps.push(...this._do.clickValidate());return steps;}}
return createTourMethods('PaymentScreen',Do,Check,Execute);});;

/* /point_of_sale/static/tests/tours/helpers/ProductConfiguratorTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ProductConfiguratorTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{pickRadio(name){return[{content:`picking radio attribute with name ${name}`,trigger:`.product-configurator-popup .radio_attribute_label:contains('${name}')`,},];}
pickSelect(name){return[{content:`picking select attribute with name ${name}`,trigger:`.product-configurator-popup .configurator_select:has(option:contains('${name}'))`,run:`text ${name}`,},];}
pickColor(name){return[{content:`picking color attribute with name ${name}`,trigger:`.product-configurator-popup .configurator_color[data-color='${name}']`,},];}
fillCustomAttribute(value){return[{content:`filling custom attribute with value ${value}`,trigger:`.product-configurator-popup .custom_value`,run:`text ${value}`,},];}
confirmAttributes(){return[{content:`confirming product configuration`,trigger:`.product-configurator-popup .button.confirm`,},];}
cancelAttributes(){return[{content:`canceling product configuration`,trigger:`.product-configurator-popup .button.cancel`,},];}}
class Check{isShown(){return[{content:'product configurator is shown',trigger:'.product-configurator-popup:not(:has(.oe_hidden))',run:()=>{},},];}}
return createTourMethods('ProductConfigurator',Do,Check);});;

/* /point_of_sale/static/tests/tours/helpers/OrderManagementScreenTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.OrderManagementScreenTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickBack(){return[{content:'order management screen, click back button',trigger:'.order-management-screen .control-panel .button.back',},];}
clickOrder(name,[otherCol,otherColVal]=[null,null]){let trigger=`.order-management-screen .order-list .order-row .item.name:contains("${name}")`;if(otherCol){trigger=`${trigger} ~ .item.${otherCol}:contains("${otherColVal}")`;}
return[{content:`clicking order '${name}' from orderlist`,trigger,},];}
clickInvoiceButton(){return[{content:'click invoice button',trigger:'.order-management-screen .control-button span:contains("Invoice")',},];}
clickPrintReceiptButton(){return[{content:'click reprint receipt button',trigger:'.order-management-screen .control-button span:contains("Print Receipt")'}]}
clickCustomerButton(){return[{content:'click customer button',trigger:'.order-management-screen .actionpad .button.set-customer',},];}
closeReceipt(){return[{content:'close receipt',trigger:'.receipt-screen .button.back',}]}}
class Check{isShown(){return[{content:'order management screen is shown',trigger:'.pos .pos-content .order-management-screen',run:()=>{},},];}
orderlistHas({orderName,total,customer}){const steps=[];steps.push({content:`order list has row having: name '${orderName}', total '${total}'`,trigger:`.order-list .order-row .item:contains("${orderName}") ~ .item:contains("${total}")`,run:()=>{},});if(customer){steps.push({content:`order list has row having: name '${orderName}', customer '${customer}'`,trigger:`.order-list .order-row .item:contains("${orderName}") ~ .item:contains("${customer}")`,run:()=>{},});}
return steps;}
highlightedOrderRowHas(name){return[{content:`order '${name}' in orderlist is highligted`,trigger:`.order-list .order-row.highlight:has(> .item:contains("${name}"))`,run:()=>{},},];}
orderRowIsNotHighlighted(name){return[{content:`order '${name}' in orderlist is not highligted`,trigger:`.order-list .order-row:not(:has(.highlight)):has(> .item:contains("${name}"))`,run:()=>{},},];}
orderDetailsHas({lines,total}){const steps=[];for(let{product,quantity}of lines){steps.push({content:`order details has product '${product}' and quantity '${quantity}'`,trigger:`.orderlines .product-name:contains("${product}") ~ .info strong:contains("${quantity}")`,run:()=>{},});}
if(total){steps.push({content:`order details has total amount of ${total}`,trigger:`.order-container .summary .total .value:contains("${total}")`,run:()=>{},});}
return steps;}
customerIs(name){return[{content:`set customer is '${name}'`,trigger:`.order-management-screen .actionpad .set-customer:contains("${name}")`,run:()=>{},},];}
reprintReceiptIsShown(){return[{content:'reprint receipt screen is shown',trigger:'.pos .receipt-screen',run:()=>{},}]}
receiptChangeIs(amount){return[{content:`receipt change is ${amount}`,trigger:`.pos-receipt-amount.receipt-change:contains("${amount}")`,run:()=>{},}]}
receiptOrderDataContains(orderInfo){return[{content:`order data contains ${orderInfo}`,trigger:`.pos-receipt-order-data:contains("${orderInfo}")`,run:()=>{},}]}
receiptAmountIs(amount){return[{content:`receipt amount is ${amount}`,trigger:`.pos-receipt-amount:contains("${amount}")`,run:()=>{},}]}
isNotHidden(){return[{content:'order management screen is not hidden',trigger:`.order-management-screen:not(:has(.oe_hidden))`,run:()=>{},}]}}
return createTourMethods('OrderManagementScreen',Do,Check);});;

/* /point_of_sale/static/tests/tours/helpers/ClientListScreenTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ClientListScreenTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickClient(name){return[{content:`click client '${name}' from client list screen`,trigger:`.clientlist-screen .client-list-contents .client-line td:contains("${name}")`,},{content:`check if client '${name}' is highlighted`,trigger:`.clientlist-screen .client-list-contents .client-line.highlight td:contains("${name}")`,run:()=>{},},];}
clickSet(){return[{content:'check if set button shown',trigger:'.clientlist-screen .button.next.highlight',run:()=>{},},{content:'click set button',trigger:'.clientlist-screen .button.next.highlight',},];}}
class Check{isShown(){return[{content:'client list screen is shown',trigger:'.pos-content .clientlist-screen',run:()=>{},},];}}
class Execute{setClient(name){const steps=[];steps.push(...this._do.clickClient(name));steps.push(...this._do.clickSet());return steps;}}
return createTourMethods('ClientListScreen',Do,Check,Execute);});;

/* /point_of_sale/static/tests/tours/helpers/ReceiptScreenTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ReceiptScreenTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickNextOrder(){return[{content:'go to next screen',trigger:'.receipt-screen .button.next.highlight',},];}
setEmail(email){return[{trigger:'.receipt-screen .input-email input',run:`text ${email}`,},];}
clickSend(isHighlighted=true){return[{trigger:`.receipt-screen .input-email .send${isHighlighted ? '.highlight' : ''}`,},];}}
class Check{isShown(){return[{content:'receipt screen is shown',trigger:'.pos .receipt-screen',run:()=>{},},];}
receiptIsThere(){return[{content:'there should be the receipt',trigger:'.receipt-screen .pos-receipt',run:()=>{},},];}
totalAmountContains(value){return[{trigger:`.receipt-screen .top-content h1:contains("${value}")`,run:()=>{},},];}
emailIsSuccessful(){return[{trigger:`.receipt-screen .notice.successful`,run:()=>{},},];}
discountAmountIs(value){return[{trigger:`.pos-receipt>div:contains("Discounts")>span:contains("${value}")`,run:()=>{},},];}}
class Execute{nextOrder(){return[...this._check.isShown(),...this._do.clickNextOrder()];}}
return createTourMethods('ReceiptScreen',Do,Check,Execute);});;

/* /point_of_sale/static/tests/tours/helpers/ChromeTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ChromeTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{confirmPopup(){return[{content:'confirm popup',trigger:'.popups .modal-dialog .button.confirm',},];}
clickOrderManagementButton(){return[{content:'check order management button is shown',trigger:'.pos .pos-rightheader .order-management',run:()=>{},},{content:'click order management button',trigger:'.pos .pos-rightheader .order-management',},];}
clickTicketButton(){return[{trigger:'.pos-topheader .ticket-button',},{trigger:'.subwindow .ticket-screen',run:()=>{},},];}}
return createTourMethods('Chrome',Do);});;

/* /point_of_sale/static/tests/tours/helpers/NumberPopupTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.NumberPopupTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{pressNumpad(keys){const numberChars='0 1 2 3 4 5 6 7 8 9 C'.split(' ');const modeButtons='+1 +10 +2 +20 +5 +50'.split(' ');const decimalSeparators=', .'.split(' ');function generateStep(key){let trigger;if(numberChars.includes(key)){trigger=`.popup-numpad .number-char:contains("${key}")`;}else if(modeButtons.includes(key)){trigger=`.popup-numpad .mode-button:contains("${key}")`;}else if(key==='Backspace'){trigger=`.popup-numpad .numpad-backspace`;}else if(decimalSeparators.includes(key)){trigger=`.popup-numpad .number-char.dot`;}
return{content:`'${key}' pressed in numpad`,trigger,};}
return keys.split(' ').map(generateStep);}
clickConfirm(){return[{content:'click confirm button',trigger:'.popup-number .footer .confirm',},];}}
class Check{isShown(){return[{content:'number popup is shown',trigger:'.modal-dialog .popup-number',run:()=>{},},];}
inputShownIs(val){return[{content:'number input element check',trigger:'.modal-dialog .popup-number .popup-input',run:()=>{},},{content:`input shown is '${val}'`,trigger:`.modal-dialog .popup-number .popup-input:contains("${val}")`,run:()=>{},},];}}
return createTourMethods('NumberPopup',Do,Check);});;

/* /point_of_sale/static/tests/tours/helpers/ErrorPopupTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ErrorPopupTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickConfirm(){return[{content:'click confirm button',trigger:'.popup-error .footer .cancel',},];}}
class Check{isShown(){return[{content:'error popup is shown',trigger:'.modal-dialog .popup-error',run:()=>{},},];}}
return createTourMethods('ErrorPopup',Do,Check);});;

/* /point_of_sale/static/tests/tours/helpers/SelectionPopupTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.SelectionPopupTourMethods',function(require){'use strict';const{createTourMethods}=require('point_of_sale.tour.utils');class Do{clickItem(name){return[{content:`click selection '${name}'`,trigger:`.selection-item:contains("${name}")`,},];}}
class Check{hasSelectionItem(name){return[{content:`selection popup has '${name}'`,trigger:`.selection-item:contains("${name}")`,run:()=>{},},];}
isShown(){return[{content:'selection popup is shown',trigger:'.modal-dialog .popup-selection',run:()=>{},},];}}
return createTourMethods('SelectionPopup',Do,Check);});;

/* /point_of_sale/static/tests/tours/helpers/CompositeTourMethods.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.CompositeTourMethods',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{ReceiptScreen}=require('point_of_sale.tour.ReceiptScreenTourMethods');const{PaymentScreen}=require('point_of_sale.tour.PaymentScreenTourMethods');const{ClientListScreen}=require('point_of_sale.tour.ClientListScreenTourMethods');function makeFullOrder({orderlist,customer,payment,ntimes=1}){for(let i=0;i<ntimes;i++){ProductScreen.exec.addMultiOrderlines(...orderlist);if(customer){ProductScreen.do.clickCustomerButton();ClientListScreen.exec.setClient(customer);}
ProductScreen.do.clickPayButton();PaymentScreen.exec.pay(...payment);ReceiptScreen.exec.nextOrder();}}
return{makeFullOrder};});;

/* /point_of_sale/static/tests/tours/point_of_sale.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.pricelist',function(require){"use strict";var Tour=require('web_tour.tour');var rpc=require('web.rpc');var utils=require('web.utils');var round_di=utils.round_decimals;function assert(condition,message){if(!condition){throw message||"Assertion failed";}}
function _build_pricelist_context(pricelist,quantity,date){return{pricelist:pricelist.id,quantity:quantity,};}
function compare_backend_frontend(product,pricelist_name,quantity){return function(){var pricelist=_.findWhere(posmodel.pricelists,{name:pricelist_name});var frontend_price=product.get_price(pricelist,quantity);frontend_price=round_di(frontend_price,posmodel.dp['Product Price']);var context=_build_pricelist_context(pricelist,quantity);return rpc.query({model:'product.product',method:'read',args:[[product.id],['price']],context:context}).then(function(backend_result){var debug_info=_.extend(context,{product:product.id,product_display_name:product.display_name,pricelist_name:pricelist.name,});var backend_price=backend_result[0].price;assert(frontend_price===backend_price,JSON.stringify(debug_info)+' DOESN\'T MATCH -> '+backend_price+' (backend) != '+frontend_price+' (frontend)');return Promise.resolve();});};}
var steps=[{content:'waiting for loading to finish',extra_trigger:'body .pos:not(:has(.loader))',trigger:'body:not(.oe_wait)',run:function(){var product_wall_shelf=posmodel.db.search_product_in_category(0,'Wall Shelf Unit')[0];var product_small_shelf=posmodel.db.search_product_in_category(0,'Small Shelf')[0];var product_magnetic_board=posmodel.db.search_product_in_category(0,'Magnetic Board')[0];var product_monitor_stand=posmodel.db.search_product_in_category(0,'Monitor Stand')[0];var product_desk_pad=posmodel.db.search_product_in_category(0,'Desk Pad')[0];var product_letter_tray=posmodel.db.search_product_in_category(0,'Letter Tray')[0];var product_whiteboard=posmodel.db.search_product_in_category(0,'Whiteboard')[0];compare_backend_frontend(product_letter_tray,'Public Pricelist',0,undefined)().then(compare_backend_frontend(product_letter_tray,'Public Pricelist',1,undefined)).then(compare_backend_frontend(product_letter_tray,'Fixed',1,undefined)).then(compare_backend_frontend(product_wall_shelf,'Fixed',1,undefined)).then(compare_backend_frontend(product_small_shelf,'Fixed',1,undefined)).then(compare_backend_frontend(product_wall_shelf,'Percentage',1,undefined)).then(compare_backend_frontend(product_small_shelf,'Percentage',1,undefined)).then(compare_backend_frontend(product_magnetic_board,'Percentage',1,undefined)).then(compare_backend_frontend(product_wall_shelf,'Formula',1,undefined)).then(compare_backend_frontend(product_small_shelf,'Formula',1,undefined)).then(compare_backend_frontend(product_magnetic_board,'Formula',1,undefined)).then(compare_backend_frontend(product_monitor_stand,'Formula',1,undefined)).then(compare_backend_frontend(product_desk_pad,'Formula',1,undefined)).then(compare_backend_frontend(product_wall_shelf,'min_quantity ordering',1,undefined)).then(compare_backend_frontend(product_wall_shelf,'min_quantity ordering',2,undefined)).then(compare_backend_frontend(product_letter_tray,'Category vs no category',1,undefined)).then(compare_backend_frontend(product_letter_tray,'Category',1,undefined)).then(compare_backend_frontend(product_wall_shelf,'Product template',1,undefined)).then(compare_backend_frontend(product_wall_shelf,'Dates',1,undefined)).then(compare_backend_frontend(product_small_shelf,'Pricelist base rounding',1,undefined)).then(compare_backend_frontend(product_whiteboard,'Public Pricelist',1,undefined)).then(function(){$('.pos').addClass('done-testing');});},}];steps=steps.concat([{content:"wait for unit tests to finish",trigger:".pos.done-testing",run:function(){},},{content:"click category switch",trigger:".breadcrumb-home",run:'click',},{content:"click pricelist button",trigger:".control-button.o_pricelist_button",},{content:"verify default pricelist is set",trigger:".selection-item.selected:contains('Public Pricelist')",run:function(){},},{content:"select fixed pricelist",trigger:".selection-item:contains('Fixed')",},{content:"open customer list",trigger:"button.set-customer",},{content:"select Deco Addict",trigger:".client-line:contains('Deco Addict')",},{content:"confirm selection",trigger:".clientlist-screen .next",},{content:"click pricelist button",trigger:".control-button.o_pricelist_button",},{content:"verify pricelist changed",trigger:".selection-item.selected:contains('Public Pricelist')",run:function(){},},{content:"cancel pricelist dialog",trigger:".button.cancel:visible",},{content:"open customer list",trigger:"button.set-customer",},{content:"select Lumber Inc",trigger:".client-line:contains('Lumber Inc')",},{content:"confirm selection",trigger:".clientlist-screen .next",},{content:"click pricelist button",trigger:".control-button.o_pricelist_button",},{content:"verify pricelist remained public pricelist ('Not loaded' is not available)",trigger:".selection-item.selected:contains('Public Pricelist')",run:function(){},},{content:"cancel pricelist dialog",trigger:".button.cancel:visible",},{content:"click pricelist button",trigger:".control-button.o_pricelist_button",},{content:"select fixed pricelist",trigger:".selection-item:contains('min_quantity ordering')",},{content:"order 1 kg shelf",trigger:".product:contains('Wall Shelf')",},{content:"change qty to 2 kg",trigger:".numpad button.input-button:visible:contains('2')",},{content:"qty of Wall Shelf line should be 2",trigger:".order-container .orderlines .orderline.selected .product-name:contains('Wall Shelf')",extra_trigger:".order-container .orderlines .orderline.selected .product-name:contains('Wall Shelf') ~ .info-list .info em:contains('2.0')",run:function(){},},{content:"verify that unit price of shelf changed to $1",trigger:".total > .value:contains('$ 2.00')",run:function(){},},{content:"order different shelf",trigger:".product:contains('Small Shelf')",},{content:"Small Shelf line should be selected with quantity 1",trigger:".order-container .orderlines .orderline.selected .product-name:contains('Small Shelf')",extra_trigger:".order-container .orderlines .orderline.selected .product-name:contains('Small Shelf') ~ .info-list .info em:contains('1.0')",run:function(){}},{content:"change to price mode",trigger:".numpad button:contains('Price')",},{content:"make sure price mode is activated",trigger:".numpad button.selected-mode:contains('Price')",run:function(){},},{content:"manually override the unit price of these shelf to $5",trigger:".numpad button.input-button:visible:contains('5')",},{content:"Small Shelf line should be selected with unit price of 5",trigger:".order-container .orderlines .orderline.selected .product-name:contains('Small Shelf')",extra_trigger:".order-container .orderlines .orderline.selected .product-name:contains('Small Shelf') ~ .price:contains('5.0')",},{content:"change back to qty mode",trigger:".numpad button:contains('Qty')",},{content:"make sure qty mode is activated",trigger:".numpad button.selected-mode:contains('Qty')",run:function(){},},{content:"click pricelist button",trigger:".control-button.o_pricelist_button",},{content:"select public pricelist",trigger:".selection-item:contains('Public Pricelist')",},{content:"verify that the boni shelf have been recomputed and the shelf have not (their price was manually overridden)",trigger:".total > .value:contains('$ 8.96')",},{content:"click pricelist button",trigger:".control-button.o_pricelist_button",},{content:"select fixed pricelist",trigger:".selection-item:contains('min_quantity ordering')",},{content:"close the Point of Sale frontend",trigger:".header-button",},{content:"confirm closing the frontend",trigger:".header-button",run:function(){},}]);Tour.register('pos_pricelist',{test:true,url:'/pos/ui'},steps);});odoo.define('point_of_sale.tour.acceptance',function(require){"use strict";var Tour=require("web_tour.tour");function add_product_to_order(product_name){return[{content:'buy '+product_name,trigger:'.product-list .product-name:contains("'+product_name+'")',},{content:'the '+product_name+' have been added to the order',trigger:'.order .product-name:contains("'+product_name+'")',run:function(){},}];}
function set_fiscal_position_on_order(fp_name){return[{content:'set fiscal position',trigger:'.control-button.o_fiscal_position_button',},{content:'choose fiscal position '+fp_name+' to add to the order',trigger:'.popups .popup .selection .selection-item:contains("'+fp_name+'")',},{content:'the fiscal position '+fp_name+' has been set to the order',trigger:'.control-button.o_fiscal_position_button:contains("'+fp_name+'")',run:function(){},}];}
function generate_keypad_steps(amount_str,keypad_selector){var i,steps=[],current_char;for(i=0;i<amount_str.length;++i){current_char=amount_str[i];steps.push({content:'press '+current_char+' on payment keypad',trigger:keypad_selector+' .input-button:contains("'+current_char+'"):visible'});}
return steps;}
function press_payment_numpad(val){return[{content:`press ${val} on payment screen numpad`,trigger:`.payment-numpad .input-button:contains("${val}"):visible`,}]}
function press_product_numpad(val){return[{content:`press ${val} on product screen numpad`,trigger:`.numpad .input-button:contains("${val}"):visible`,}]}
function selected_payment_has(name,val){return[{content:`selected payment is ${name} and has ${val}`,trigger:`.paymentlines .paymentline.selected .payment-name:contains("${name}")`,extra_trigger:`.paymentlines .paymentline.selected .payment-name:contains("${name}") ~ .payment-amount:contains("${val}")`,run:function(){},}]}
function selected_orderline_has({product,price=null,quantity=null}){const result=[];if(price!==null){result.push({content:`Selected line has product '${product}' and price '${price}'`,trigger:`.order-container .orderlines .orderline.selected .product-name:contains("${product}") ~ span.price:contains("${price}")`,run:function(){},});}
if(quantity!==null){result.push({content:`Selected line has product '${product}' and quantity '${quantity}'`,trigger:`.order-container .orderlines .orderline.selected .product-name:contains('${product}') ~ .info-list .info em:contains('${quantity}')`,run:function(){},});}
return result;}
function verify_order_total(total_str){return[{content:'order total contains '+total_str,trigger:'.order .total .value:contains("'+total_str+'")',run:function(){},}];}
function goto_payment_screen_and_select_payment_method(){return[{content:"go to payment screen",trigger:'.button.pay',},{content:"pay with cash",trigger:'.paymentmethod:contains("Cash")',}];}
function finish_order(){return[{content:"validate the order",trigger:'.payment-screen .button.next.highlight:visible',},{content:"verify that the order has been successfully sent to the backend",trigger:".js_connected:visible",run:function(){},},{content:"click Next Order",trigger:'.receipt-screen .button.next.highlight:visible',},{content:"check if we left the receipt screen",trigger:'.pos-content .screen:not(:has(.receipt-screen))',run:function(){},}];}
var steps=[{content:'waiting for loading to finish',trigger:'body:not(:has(.loader))',run:function(){},},{content:"click category switch",trigger:".breadcrumb-home",}];steps=steps.concat(add_product_to_order('Desk Organizer'));steps=steps.concat(verify_order_total('5.10'));steps=steps.concat(add_product_to_order('Desk Organizer'));steps=steps.concat(verify_order_total('10.20'));steps=steps.concat(goto_payment_screen_and_select_payment_method());steps=steps.concat(press_payment_numpad('5'));steps=steps.concat(selected_payment_has('Cash','5.0'));steps=steps.concat([{content:"verify remaining",trigger:'.payment-status-remaining .amount:contains("5.20")',run:function(){},},{content:"verify change",trigger:'.payment-status-change .amount:contains("0.00")',run:function(){},}]);steps=steps.concat([{content:"pay with cash",trigger:'.paymentmethod:contains("Cash")',}]);steps=steps.concat(selected_payment_has('Cash','5.2'));steps=steps.concat(press_payment_numpad('6'))
steps=steps.concat(selected_payment_has('Cash','6.0'));steps=steps.concat([{content:"verify remaining",trigger:'.payment-status-remaining .amount:contains("0.00")',run:function(){},},{content:"verify change",trigger:'.payment-status-change .amount:contains("0.80")',run:function(){},}]);steps=steps.concat(finish_order());steps=steps.concat(add_product_to_order('Desk Organizer'));steps=steps.concat(selected_orderline_has({product:'Desk Organizer',quantity:'1.0'}));steps=steps.concat(press_product_numpad('.'))
steps=steps.concat(selected_orderline_has({product:'Desk Organizer',quantity:'0.0',price:'0.0'}));steps=steps.concat(press_product_numpad('9'))
steps=steps.concat(selected_orderline_has({product:'Desk Organizer',quantity:'0.9',price:'4.59'}));steps=steps.concat(press_product_numpad('9'))
steps=steps.concat(selected_orderline_has({product:'Desk Organizer',quantity:'0.99',price:'5.05'}));steps=steps.concat(goto_payment_screen_and_select_payment_method());steps=steps.concat(selected_payment_has('Cash','5.05'));steps=steps.concat(finish_order());steps=steps.concat(add_product_to_order('Letter Tray'));steps=steps.concat(selected_orderline_has({product:'Letter Tray',quantity:'1.0'}));steps=steps.concat(verify_order_total('5.28'));steps=steps.concat(set_fiscal_position_on_order('FP-POS-2M'));steps=steps.concat(verify_order_total('5.52'));steps=steps.concat([{content:"close the Point of Sale frontend",trigger:".header-button",},{content:"confirm closing the frontend",trigger:".header-button.confirm",run:function(){},}]);Tour.register('pos_basic_order',{test:true,url:'/pos/ui'},steps);});;

/* /point_of_sale/static/tests/tours/ProductScreen.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ProductScreen',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');var Tour=require('web_tour.tour');startSteps();ProductScreen.do.clickHomeCategory();ProductScreen.do.clickDisplayedProduct('Desk Organizer');ProductScreen.check.selectedOrderlineHas('Desk Organizer','1.0','5.10');ProductScreen.do.clickDisplayedProduct('Desk Organizer');ProductScreen.check.selectedOrderlineHas('Desk Organizer','2.0','10.20');ProductScreen.do.clickDisplayedProduct('Letter Tray');ProductScreen.check.selectedOrderlineHas('Letter Tray','1.0','4.80');ProductScreen.do.clickDisplayedProduct('Desk Organizer');ProductScreen.check.selectedOrderlineHas('Desk Organizer','3.0','15.30');ProductScreen.do.clickOrderline('Letter Tray','1');ProductScreen.check.selectedOrderlineHas('Letter Tray','1.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Letter Tray','0.0','0.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Desk Organizer','3','15.30');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Desk Organizer','0.0','0.0');ProductScreen.do.pressNumpad('1');ProductScreen.check.selectedOrderlineHas('Desk Organizer','1.0','5.1');ProductScreen.do.pressNumpad('2');ProductScreen.check.selectedOrderlineHas('Desk Organizer','12.0','61.2');ProductScreen.do.pressNumpad('3');ProductScreen.check.selectedOrderlineHas('Desk Organizer','123.0','627.3');ProductScreen.do.pressNumpad('. 5');ProductScreen.check.selectedOrderlineHas('Desk Organizer','123.5','629.85');ProductScreen.do.pressNumpad('Price');ProductScreen.do.pressNumpad('1');ProductScreen.check.selectedOrderlineHas('Desk Organizer','123.5','123.5');ProductScreen.do.pressNumpad('1 .');ProductScreen.check.selectedOrderlineHas('Desk Organizer','123.5','1,358.5');ProductScreen.do.pressNumpad('Disc');ProductScreen.do.pressNumpad('5 .');ProductScreen.check.selectedOrderlineHas('Desk Organizer','123.5','1,290.58');ProductScreen.do.pressNumpad('Qty');ProductScreen.do.pressNumpad('Backspace');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.orderIsEmpty();ProductScreen.do.clickSubcategory('Desks');ProductScreen.check.productIsDisplayed('Desk Pad');ProductScreen.do.clickHomeCategory();ProductScreen.do.clickSubcategory('Miscellaneous');ProductScreen.check.productIsDisplayed('Whiteboard Pen');ProductScreen.do.clickHomeCategory();ProductScreen.do.clickSubcategory('Chairs');ProductScreen.check.productIsDisplayed('Letter Tray');ProductScreen.do.clickHomeCategory();ProductScreen.do.clickDisplayedProduct('Whiteboard Pen');ProductScreen.do.clickDisplayedProduct('Wall Shelf Unit');ProductScreen.do.clickDisplayedProduct('Small Shelf');ProductScreen.do.clickDisplayedProduct('Magnetic Board');ProductScreen.do.clickDisplayedProduct('Monitor Stand');ProductScreen.do.clickOrderline('Whiteboard Pen','1.0');ProductScreen.check.selectedOrderlineHas('Whiteboard Pen','1.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Whiteboard Pen','0.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Monitor Stand','1.0');ProductScreen.do.clickOrderline('Wall Shelf Unit','1.0');ProductScreen.check.selectedOrderlineHas('Wall Shelf Unit','1.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Wall Shelf Unit','0.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Monitor Stand','1.0');ProductScreen.do.clickOrderline('Small Shelf','1.0');ProductScreen.check.selectedOrderlineHas('Small Shelf','1.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Small Shelf','0.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Monitor Stand','1.0');ProductScreen.do.clickOrderline('Magnetic Board','1.0');ProductScreen.check.selectedOrderlineHas('Magnetic Board','1.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Magnetic Board','0.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Monitor Stand','1.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.selectedOrderlineHas('Monitor Stand','0.0');ProductScreen.do.pressNumpad('Backspace');ProductScreen.check.orderIsEmpty();Tour.register('ProductScreenTour',{test:true,url:'/pos/ui'},getSteps());startSteps();ProductScreen.do.clickHomeCategory();ProductScreen.do.clickDisplayedProduct('Test Product');ProductScreen.check.totalAmountIs('100.00');ProductScreen.do.changeFiscalPosition('No Tax');ProductScreen.check.noDiscountApplied("100.00");ProductScreen.check.totalAmountIs('86.96');Tour.register('FiscalPositionNoTax',{test:true,url:'/pos/ui'},getSteps());});odoo.define('point_of_sale.tour.FixedPriceNegativeQty',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{PaymentScreen}=require('point_of_sale.tour.PaymentScreenTourMethods');const{ReceiptScreen}=require('point_of_sale.tour.ReceiptScreenTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');var Tour=require('web_tour.tour');startSteps();ProductScreen.do.clickHomeCategory();ProductScreen.do.clickDisplayedProduct('Zero Amount Product');ProductScreen.check.selectedOrderlineHas('Zero Amount Product','1.0','1.0');ProductScreen.do.pressNumpad('+/- 1');ProductScreen.check.selectedOrderlineHas('Zero Amount Product','-1.0','-1.0');ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.check.remainingIs('0.00');PaymentScreen.do.clickValidate();ReceiptScreen.check.receiptIsThere();Tour.register('FixedTaxNegativeQty',{test:true,url:'/pos/ui'},getSteps());});;

/* /point_of_sale/static/tests/tours/PaymentScreen.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.PaymentScreen',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{PaymentScreen}=require('point_of_sale.tour.PaymentScreenTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');var Tour=require('web_tour.tour');startSteps();ProductScreen.exec.addOrderline('Letter Tray','10');ProductScreen.check.selectedOrderlineHas('Letter Tray','10.0');ProductScreen.do.clickPayButton();PaymentScreen.check.emptyPaymentlines('52.8');PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.pressNumpad('1 1');PaymentScreen.check.selectedPaymentlineHas('Cash','11.00');PaymentScreen.check.remainingIs('41.8');PaymentScreen.check.changeIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(false);PaymentScreen.do.pressNumpad('Backspace Backspace');PaymentScreen.check.selectedPaymentlineHas('Cash','0.00');PaymentScreen.do.pressNumpad('Backspace');PaymentScreen.check.emptyPaymentlines('52.8');PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.check.remainingIs('0.0');PaymentScreen.check.changeIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(true);PaymentScreen.do.clickPaymentlineDelButton('Bank','52.8');PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.pressNumpad('+10');PaymentScreen.check.remainingIs('42.8');PaymentScreen.check.changeIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(false);PaymentScreen.do.pressNumpad('+50');PaymentScreen.check.remainingIs('0.0');PaymentScreen.check.changeIs('7.2');PaymentScreen.check.validateButtonIsHighlighted(true);PaymentScreen.do.clickPaymentlineDelButton('Cash','60.0');PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.pressNumpad('1');PaymentScreen.check.remainingIs('51.8');PaymentScreen.check.changeIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(false);PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.pressNumpad('5');PaymentScreen.check.remainingIs('46.8');PaymentScreen.check.changeIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(false);PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.do.pressNumpad('2 0');PaymentScreen.check.remainingIs('26.8');PaymentScreen.check.changeIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(false);PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.check.remainingIs('0.0');PaymentScreen.check.changeIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(true);Tour.register('PaymentScreenTour',{test:true,url:'/pos/ui'},getSteps());});;

/* /point_of_sale/static/tests/tours/ProductConfigurator.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ProductConfigurator',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{ProductConfigurator}=require('point_of_sale.tour.ProductConfiguratorTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');var Tour=require('web_tour.tour');startSteps();ProductScreen.do.clickHomeCategory();ProductScreen.do.clickDisplayedProduct('Configurable Chair');ProductConfigurator.check.isShown();ProductConfigurator.do.cancelAttributes();ProductScreen.check.orderIsEmpty();ProductScreen.do.clickDisplayedProduct('Configurable Chair');ProductConfigurator.check.isShown();ProductConfigurator.do.pickColor('Red');ProductConfigurator.do.pickSelect('Metal');ProductConfigurator.do.pickRadio('Other');ProductConfigurator.do.fillCustomAttribute('Custom Fabric');ProductConfigurator.do.confirmAttributes();ProductScreen.check.selectedOrderlineHas('Configurable Chair (Red, Metal, Other: Custom Fabric)','1.0','11.0');ProductScreen.do.clickHomeCategory();ProductScreen.do.clickDisplayedProduct('Configurable Chair');ProductConfigurator.do.pickColor('Red');ProductConfigurator.do.pickSelect('Metal');ProductConfigurator.do.pickRadio('Other');ProductConfigurator.do.fillCustomAttribute('Custom Fabric');ProductConfigurator.do.confirmAttributes();ProductScreen.check.selectedOrderlineHas('Configurable Chair (Red, Metal, Other: Custom Fabric)','2.0','22.0');ProductScreen.do.clickHomeCategory();ProductScreen.do.clickDisplayedProduct('Configurable Chair');ProductConfigurator.do.pickColor('Blue');ProductConfigurator.do.pickSelect('Metal');ProductConfigurator.do.pickRadio('Leather');ProductConfigurator.do.confirmAttributes();ProductScreen.check.selectedOrderlineHas('Configurable Chair (Blue, Metal, Leather)','1.0','10.0');Tour.register('ProductConfiguratorTour',{test:true,url:'/pos/ui'},getSteps());});;

/* /point_of_sale/static/tests/tours/OrderManagementScreen.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.OrderManagementScreen',function(require){'use strict';const{OrderManagementScreen}=require('point_of_sale.tour.OrderManagementScreenTourMethods');const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{PaymentScreen}=require('point_of_sale.tour.PaymentScreenTourMethods');const{ClientListScreen}=require('point_of_sale.tour.ClientListScreenTourMethods');const{TicketScreen}=require('point_of_sale.tour.TicketScreenTourMethods');const{Chrome}=require('point_of_sale.tour.ChromeTourMethods');const{makeFullOrder}=require('point_of_sale.tour.CompositeTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');var Tour=require('web_tour.tour');startSteps();ProductScreen.do.clickHomeCategory();makeFullOrder({orderlist:[['Whiteboard Pen','5','6']],payment:['Cash','30']});Chrome.do.clickOrderManagementButton();OrderManagementScreen.check.isShown();OrderManagementScreen.check.orderlistHas({orderName:'-0001',total:'30'});OrderManagementScreen.do.clickBack();makeFullOrder({orderlist:[['Desk Pad','1','2'],['Monitor Stand','3','4'],['Whiteboard Pen','5','6'],],payment:['Bank','44'],});makeFullOrder({orderlist:[['Desk Pad','1','2'],['Whiteboard Pen','5','6'],],customer:'Colleen Diaz',payment:['Cash','50'],});makeFullOrder({orderlist:[['Monitor Stand','3','4'],['Whiteboard Pen','5','6'],],payment:['Bank','42'],});Chrome.do.clickOrderManagementButton();OrderManagementScreen.check.isShown();OrderManagementScreen.check.orderlistHas({orderName:'-0002',total:'44'});OrderManagementScreen.check.orderlistHas({orderName:'0003',total:'32',customer:'Colleen Diaz',});OrderManagementScreen.check.orderlistHas({orderName:'-0004',total:'42'});OrderManagementScreen.do.clickOrder('-0005');ProductScreen.check.isShown();Chrome.do.clickTicketButton();TicketScreen.do.clickNewTicket();ProductScreen.exec.addOrderline('Whiteboard Pen','66','6');Chrome.do.clickTicketButton();TicketScreen.do.clickNewTicket();ProductScreen.exec.addOrderline('Monitor Stand','55','5');ProductScreen.do.clickCustomerButton();ClientListScreen.exec.setClient('Azure Interior');ProductScreen.do.clickPayButton();Chrome.do.clickOrderManagementButton();OrderManagementScreen.check.orderlistHas({orderName:'-0006',total:'396'});OrderManagementScreen.check.orderlistHas({orderName:'-0007',total:'275',customer:'Azure Interior',});OrderManagementScreen.do.clickOrder('-0004');OrderManagementScreen.check.highlightedOrderRowHas('-0004');OrderManagementScreen.check.orderDetailsHas({lines:[{product:'Monitor Stand',quantity:'3'},{product:'Whiteboard Pen',quantity:'5'},],total:'42',});OrderManagementScreen.do.clickOrder('-0001');OrderManagementScreen.check.highlightedOrderRowHas('-0001');OrderManagementScreen.check.orderRowIsNotHighlighted('-0004');OrderManagementScreen.check.orderDetailsHas({lines:[{product:'Whiteboard Pen',quantity:'5'}],total:'30',});OrderManagementScreen.do.clickOrder('-0007');PaymentScreen.check.isShown();Chrome.do.clickOrderManagementButton();OrderManagementScreen.check.isShown();OrderManagementScreen.do.clickOrder('-0003');OrderManagementScreen.do.clickPrintReceiptButton();OrderManagementScreen.check.reprintReceiptIsShown();OrderManagementScreen.check.receiptChangeIs('18.0');OrderManagementScreen.check.receiptOrderDataContains('-0003');OrderManagementScreen.check.receiptAmountIs('32.0');OrderManagementScreen.do.closeReceipt();OrderManagementScreen.check.isNotHidden();Tour.register('OrderManagementScreenTour',{test:true,url:'/pos/ui'},getSteps());});;

/* /point_of_sale/static/tests/tours/ReceiptScreen.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.ReceiptScreen',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{ReceiptScreen}=require('point_of_sale.tour.ReceiptScreenTourMethods');const{PaymentScreen}=require('point_of_sale.tour.PaymentScreenTourMethods');const{NumberPopup}=require('point_of_sale.tour.NumberPopupTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');const Tour=require('web_tour.tour');startSteps();ProductScreen.exec.addOrderline('Letter Tray','10','5');ProductScreen.check.selectedOrderlineHas('Letter Tray','10');ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.check.validateButtonIsHighlighted(true);PaymentScreen.do.clickValidate();ReceiptScreen.check.receiptIsThere();ReceiptScreen.check.totalAmountContains('55.0');ReceiptScreen.do.clickNextOrder();ProductScreen.do.clickHomeCategory();ProductScreen.exec.addOrderline('Desk Pad','6','5','30.0');ProductScreen.exec.addOrderline('Whiteboard Pen','6','6','36.0');ProductScreen.exec.addOrderline('Monitor Stand','6','1','6.0');ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.pressNumpad('7 0');PaymentScreen.check.remainingIs('2.0');PaymentScreen.do.pressNumpad('0');PaymentScreen.check.remainingIs('0.00');PaymentScreen.check.changeIs('628.0');PaymentScreen.do.clickValidate();ReceiptScreen.check.receiptIsThere();ReceiptScreen.check.totalAmountContains('72.0');ReceiptScreen.do.setEmail('test@receiptscreen.com');ReceiptScreen.do.clickSend();ReceiptScreen.check.emailIsSuccessful();ReceiptScreen.do.clickNextOrder();ProductScreen.exec.addOrderline('Desk Pad','6','5');ProductScreen.do.clickPayButton();PaymentScreen.do.clickTipButton();NumberPopup.do.pressNumpad('1');NumberPopup.check.inputShownIs('1');NumberPopup.do.clickConfirm();PaymentScreen.check.emptyPaymentlines('31.0');PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.clickValidate();ReceiptScreen.check.receiptIsThere();ReceiptScreen.check.totalAmountContains('$ 30.00 + $ 1.00 tip');ReceiptScreen.do.clickNextOrder();Tour.register('ReceiptScreenTour',{test:true,url:'/pos/ui'},getSteps());startSteps();ProductScreen.do.clickHomeCategory();ProductScreen.exec.addOrderline('Test Product','1');ProductScreen.do.clickPricelistButton();ProductScreen.do.selectPriceList('special_pricelist');ProductScreen.check.discountOriginalPriceIs('7.0');ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.clickValidate();ReceiptScreen.check.discountAmountIs('0.7');Tour.register('ReceiptScreenDiscountWithPricelistTour',{test:true,url:'/pos/ui'},getSteps());});;

/* /point_of_sale/static/tests/tours/Chrome.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.Chrome',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{ReceiptScreen}=require('point_of_sale.tour.ReceiptScreenTourMethods');const{PaymentScreen}=require('point_of_sale.tour.PaymentScreenTourMethods');const{TicketScreen}=require('point_of_sale.tour.TicketScreenTourMethods');const{Chrome}=require('point_of_sale.tour.ChromeTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');var Tour=require('web_tour.tour');startSteps();ProductScreen.do.clickHomeCategory();ProductScreen.exec.addOrderline('Desk Pad','1','2','2.0');Chrome.do.clickTicketButton();TicketScreen.check.checkStatus('-0001','Ongoing');TicketScreen.do.clickNewTicket();ProductScreen.exec.addOrderline('Monitor Stand','3','4','12.0');ProductScreen.do.clickPayButton();PaymentScreen.check.isShown();Chrome.do.clickTicketButton();TicketScreen.check.checkStatus('-0002','Payment');TicketScreen.do.clickNewTicket();ProductScreen.exec.addOrderline('Whiteboard Pen','5','6','30.0');ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.check.remainingIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(true);PaymentScreen.do.clickValidate();ReceiptScreen.check.isShown();Chrome.do.clickTicketButton();TicketScreen.check.checkStatus('-0003','Receipt');TicketScreen.do.selectOrder('-0001');ProductScreen.check.productIsDisplayed('Desk Pad');ProductScreen.check.selectedOrderlineHas('Desk Pad','1.0','2.0');Chrome.do.clickTicketButton();TicketScreen.do.selectOrder('-0002');PaymentScreen.check.emptyPaymentlines('12.0');PaymentScreen.check.validateButtonIsHighlighted(false);Chrome.do.clickTicketButton();TicketScreen.do.selectOrder('-0003');ReceiptScreen.check.totalAmountContains('30.0');Chrome.do.clickTicketButton();TicketScreen.do.selectOrder('-0001');ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Cash');PaymentScreen.do.pressNumpad('2 0');PaymentScreen.check.remainingIs('0.0');PaymentScreen.check.validateButtonIsHighlighted(true);PaymentScreen.do.clickValidate();ReceiptScreen.check.totalAmountContains('2.0');Chrome.do.clickTicketButton();TicketScreen.check.checkStatus('-0001','Receipt');TicketScreen.do.selectOrder('-0003');ReceiptScreen.check.totalAmountContains('30.0');ReceiptScreen.do.clickNextOrder();ProductScreen.check.orderIsEmpty();Chrome.do.clickTicketButton();TicketScreen.do.deleteOrder('-0004');TicketScreen.do.deleteOrder('-0001');TicketScreen.check.nthRowContains(2,'Payment')
TicketScreen.do.deleteOrder('-0002');Chrome.do.confirmPopup();TicketScreen.do.clickNewTicket();ProductScreen.exec.addOrderline('Whiteboard Pen','5','6');ProductScreen.do.clickCustomerButton();ProductScreen.do.clickCustomer('Nicole Ford');ProductScreen.do.clickSetCustomer();ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.do.clickInvoiceButton();PaymentScreen.do.clickValidate();ReceiptScreen.check.isShown();Tour.register('ChromeTour',{test:true,url:'/pos/ui'},getSteps());});;

/* /point_of_sale/static/tests/tours/TicketScreen.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.TicketScreen',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{ReceiptScreen}=require('point_of_sale.tour.ReceiptScreenTourMethods');const{PaymentScreen}=require('point_of_sale.tour.PaymentScreenTourMethods');const{TicketScreen}=require('point_of_sale.tour.TicketScreenTourMethods');const{Chrome}=require('point_of_sale.tour.ChromeTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');var Tour=require('web_tour.tour');startSteps();ProductScreen.do.clickHomeCategory();ProductScreen.exec.addOrderline('Desk Pad','1','2');ProductScreen.do.clickCustomerButton();ProductScreen.do.clickCustomer('Nicole Ford');ProductScreen.do.clickSetCustomer();Chrome.do.clickTicketButton();TicketScreen.check.nthRowContains(2,'Nicole Ford');TicketScreen.do.clickNewTicket();ProductScreen.exec.addOrderline('Desk Pad','1','3');ProductScreen.do.clickCustomerButton();ProductScreen.do.clickCustomer('Brandon Freeman');ProductScreen.do.clickSetCustomer();ProductScreen.do.clickPayButton();PaymentScreen.check.isShown();Chrome.do.clickTicketButton();TicketScreen.check.nthRowContains(3,'Brandon Freeman');TicketScreen.do.clickNewTicket();ProductScreen.exec.addOrderline('Desk Pad','1','4');ProductScreen.do.clickPayButton();PaymentScreen.do.clickPaymentMethod('Bank');PaymentScreen.do.clickValidate();ReceiptScreen.check.isShown();Chrome.do.clickTicketButton();TicketScreen.check.nthRowContains(4,'Receipt');TicketScreen.do.selectFilter('Receipt');TicketScreen.check.nthRowContains(2,'Receipt');TicketScreen.do.selectFilter('Payment');TicketScreen.check.nthRowContains(2,'Payment');TicketScreen.do.selectFilter('Ongoing');TicketScreen.check.nthRowContains(2,'Ongoing');TicketScreen.do.selectFilter('All');TicketScreen.check.nthRowContains(4,'Receipt');TicketScreen.do.search('Customer','Nicole');TicketScreen.check.nthRowContains(2,'Nicole');TicketScreen.do.search('Customer','Brandon');TicketScreen.check.nthRowContains(2,'Brandon');TicketScreen.do.search('Receipt Number','-0003');TicketScreen.check.nthRowContains(2,'Receipt');Tour.register('TicketScreenTour',{test:true,url:'/pos/ui'},getSteps());});;

/* /point_of_sale/static/tests/tours/BarcodeScanning.tour.js defined in bundle 'web.assets_tests' */
odoo.define('point_of_sale.tour.BarcodeScanning',function(require){'use strict';const{ProductScreen}=require('point_of_sale.tour.ProductScreenTourMethods');const{getSteps,startSteps}=require('point_of_sale.tour.utils');const Tour=require('web_tour.tour');startSteps();ProductScreen.do.scan_barcode("0123456789");ProductScreen.check.selectedOrderlineHas('Monitor Stand');ProductScreen.do.scan_barcode("0123456789");ProductScreen.check.selectedOrderlineHas('Monitor Stand',2);ProductScreen.do.scan_ean13_barcode("2305000000004");ProductScreen.check.selectedOrderlineHas('Magnetic Board',1,"0.00");ProductScreen.do.scan_ean13_barcode("2305000123454");ProductScreen.check.selectedOrderlineHas('Magnetic Board',1,"123.45");ProductScreen.do.scan_ean13_barcode("2100005000000");ProductScreen.check.selectedOrderlineHas('Wall Shelf Unit',0,"0.00");ProductScreen.do.scan_ean13_barcode("2100005080000");ProductScreen.check.selectedOrderlineHas('Wall Shelf Unit',8);Tour.register('BarcodeScanningTour',{test:true,url:'/pos/ui'},getSteps());});